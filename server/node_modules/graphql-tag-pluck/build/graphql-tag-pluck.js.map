{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/config.js","webpack:///./src/libs/babel.js","webpack:///external \"@babel/parser\"","webpack:///external \"@babel/traverse\"","webpack:///external \"typescript\"","webpack:///./src/libs/fs.js","webpack:///external \"fs\"","webpack:///./src/libs/path.js","webpack:///external \"path\"","webpack:///./src/visitor.js","webpack:///external \"@babel/types\"","webpack:///./src/utils.js"],"names":["gqlExtensions","jsExtensions","supportedExtensions","toString","join","gqlPluckFromFile","filePath","options","String","TypeError","fileExt","extname","includes","fs","readFile","encoding","Object","resolve","process","cwd","useSync","code","readFileSync","config","Config","gqlPluckFromCodeString","then","sync","out","ast","babel","parse","visitor","createVisitor","_options","traverse","returnValue","fromFile","fromCodeString","plugins","decoratorsBeforeExport","proposal","flowPlugins","all","dynamicFlowPlugins","test","push","assign","sourceType","babelTraverse","ts","compilerOptions","target","ES2018","jsx","outputText","slice","tsIndex","indexOf","splice","babelParse","writeFileSync","args","Promise","reject","err","content","writeFile","path","partials","split","ext","pop","length","defaults","defaultGqlIdentifierName","gqlMagicComment","gqlPackName","toLowerCase","gqlTemplateLiterals","gqlIdentifierName","pluckStringFromFile","start","end","freeText","replace","pluckMagicTemplateLiteral","node","leadingComments","leadingComment","leadingCommentValue","value","trim","gqlTemplateLiteral","CallExpression","enter","callee","name","arguments","t","parent","id","arg0","ImportDeclaration","source","gqlImportSpecifier","specifiers","find","importSpecifier","local","ExpressionStatement","exit","expression","TemplateLiteral","TaggedTemplateExpression","tag","quasi","text","Array","match","baseIndent","map","line","lines","minIndent","filter","reduce","currIndent","Infinity","splitWords","str","toUpperFirst","substr","toUpperCase","toCamelCase","words","first","shift","rest"],"mappings":"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","file":"graphql-tag-pluck.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Config from './config'\nimport babel from './libs/babel'\nimport fs from './libs/fs'\nimport { resolve, extname } from './libs/path'\nimport createVisitor from './visitor'\n\nconst gqlExtensions = [\n  '.graphqls', '.graphql', '.gqls', '.gql'\n]\n\nconst jsExtensions = [\n  '.js', '.jsx', '.ts', '.tsx', '.flow', '.flow.js', '.flow.jsx'\n]\n\nconst supportedExtensions = [...gqlExtensions, ...jsExtensions]\n\nsupportedExtensions.toString = function toString() {\n  return this.join(', ')\n}\n\nexport const gqlPluckFromFile = (filePath, options = {}) => {\n  if (typeof filePath != 'string' && !(filePath instanceof String)) {\n    throw TypeError('Provided file path must be a string')\n  }\n\n  const fileExt = extname(filePath)\n\n  if (!supportedExtensions.includes(fileExt)) {\n    throw TypeError(`Provided file type must be one of ${supportedExtensions}`)\n  }\n\n  if (gqlExtensions.includes(fileExt)) {\n    return fs.readFile(filePath, { encoding: 'utf8' })\n  }\n\n  if (!(options instanceof Object)) {\n    throw TypeError(`Options arg must be an object`)\n  }\n\n  filePath = resolve(process.cwd(), filePath)\n  options = { ...options, fileExt }\n\n  if (options.useSync) {\n    const code = fs.readFileSync(filePath, { encoding: 'utf8' })\n    const config = new Config(code, options)\n\n    return gqlPluckFromCodeString(code, config)\n  }\n\n  return fs.readFile(filePath, { encoding: 'utf8' }).then((code) => {\n    const config = new Config(code, options)\n    return gqlPluckFromCodeString(code, config)\n  })\n}\n\ngqlPluckFromFile.sync = (filePath, options = {}) => {\n  options = { ...options, useSync: true }\n\n  return gqlPluckFromFile(filePath, options)\n}\n\nexport const gqlPluckFromCodeString = (code, options = {}) => {\n  if (typeof code != 'string' && !(code instanceof String)) {\n    throw TypeError('Provided code must be a string')\n  }\n\n  if (!(options instanceof Object)) {\n    throw TypeError(`Options arg must be an object`)\n  }\n\n  if (options.fileExt) {\n    if (gqlExtensions.includes(options.fileExt)) {\n      return code\n    }\n\n    if (!jsExtensions.includes(options.fileExt)) {\n      throw TypeError(`options.fileExt must be one of ${supportedExtensions}`)\n    }\n  }\n\n  const out = {}\n  const config = new Config(code, options)\n  const ast = babel.parse(code, config)\n  const visitor = createVisitor(ast.code, out, config._options)\n\n  babel.traverse(ast, visitor)\n\n  return out.returnValue\n}\n\nexport default {\n  fromFile: gqlPluckFromFile,\n  fromCodeString: gqlPluckFromCodeString,\n}\n","export default function Config(code, options) {\n  if (options instanceof Config) {\n    return options\n  }\n\n  const plugins = [\n    'asyncGenerators',\n    'bigInt',\n    'classProperties',\n    'classPrivateProperties',\n    'classPrivateMethods',\n    ['decorators', { decoratorsBeforeExport: true }],\n    'doExpressions',\n    'dynamicImport',\n    'exportDefaultFrom',\n    'exportNamespaceFrom',\n    'functionBind',\n    'functionSent',\n    'importMeta',\n    'logicalAssignment',\n    'nullishCoalescingOperator',\n    'numericSeparator',\n    'objectRestSpread',\n    'optionalCatchBinding',\n    'optionalChaining',\n    ['pipelineOperator', { proposal: 'smart' }],\n    'throwExpressions',\n  ]\n\n  // { all: true } option is bullshit thus I do it manually, just in case\n  // I still specify it\n  const flowPlugins = [['flow', { all: true }], 'flowComments']\n\n  // If line has @flow header, include flow plug-ins\n  const dynamicFlowPlugins = (\n    /^\\/\\/ *@flow *\\n/.test(code) ||\n    /^\\/\\* *@flow *\\*\\/ *\\n/.test(code)\n  ) ? flowPlugins : []\n\n  switch (options.fileExt) {\n    case '.ts': plugins.push('typescript'); break\n    case '.tsx': plugins.push('typescript', 'jsx'); break\n    case '.jsx': plugins.push('jsx', ...dynamicFlowPlugins); break\n    case '.flow.js': plugins.push(...flowPlugins); break\n    case '.flow.jsx': plugins.push('jsx', ...flowPlugins); break\n    case '.flow': plugins.push(...flowPlugins); break\n    default: plugins.push(...dynamicFlowPlugins); break\n  }\n\n  // The _options filed will be used to retrieve the original options.\n  // Useful when we wanna get not config related options later on\n  return Object.assign(this, {\n    _options: options,\n    sourceType: 'module',\n    plugins,\n  })\n}\n","import { parse as babelParse } from '@babel/parser'\nimport babelTraverse from '@babel/traverse'\nimport * as ts from 'typescript'\n\nexport const traverse = babelTraverse\n\nexport const parse = (code, config) => {\n  // The 'typescript' plug-in has few bugs... It's just better to use the native one\n  // even though it affects performance\n  if (config.plugins.includes('typescript')) {\n    code = ts.transpileModule(code, {\n      compilerOptions: {\n        target: ts.ScriptTarget.ES2018,\n        jsx: config.plugins.includes('jsx'),\n      }\n    }).outputText\n\n    const plugins = config.plugins.slice()\n    const tsIndex = plugins.indexOf('typescript')\n    plugins.splice(tsIndex, 1)\n\n    config = { ...config, plugins }\n  }\n\n  const ast = babelParse(code, config)\n  // Necessary to get the original code in case it was transformed by TypeScript\n  ast.code = code\n\n  return ast\n}\n\nexport default {\n  traverse,\n  parse,\n}\n","module.exports = require(\"@babel/parser\");","module.exports = require(\"@babel/traverse\");","module.exports = require(\"typescript\");","import fs from 'fs'\n\nexport const readFileSync = fs.readFileSync\nexport const writeFileSync = fs.writeFileSync\n\nexport const readFile = (...args) => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(...args, (err, content) => {\n      if (err) {\n        reject(err)\n      }\n      else {\n        resolve(content)\n      }\n    })\n  })\n}\n\nexport const writeFile = (...args) => {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(...args, (err) => {\n      if (err) {\n        reject(err)\n      }\n      else {\n        resolve()\n      }\n    })\n  })\n}\n\nexport default {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync,\n}\n","module.exports = require(\"fs\");","import path from 'path'\n\nexport const resolve = path.resolve\n\nexport const extname = (filePath) => {\n  const partials = filePath.split('.')\n  let ext = '.' + partials.pop()\n\n  if (partials.length > 1 && partials[partials.length - 1] == 'flow') {\n    ext = '.' + partials.pop() + ext\n  }\n\n  return ext\n}\n","module.exports = require(\"path\");","import * as t from '@babel/types'\nimport { freeText } from './utils'\n\nconst defaults = {\n  defaultGqlIdentifierName: 'gql',\n  gqlMagicComment: 'graphql',\n  gqlPackName: 'graphql-tag',\n}\n\nexport default (code, out, options = {}) => {\n  // Apply defaults to options\n  let {\n    defaultGqlIdentifierName,\n    gqlMagicComment,\n    gqlPackName,\n  } = { ...defaults, ...options }\n\n  // Prevent case related potential errors\n  defaultGqlIdentifierName = defaultGqlIdentifierName.toLowerCase()\n  gqlMagicComment = gqlMagicComment.toLowerCase()\n  gqlPackName = gqlPackName.toLowerCase()\n\n  // Will accumulate all template literals\n  const gqlTemplateLiterals = []\n  // By default, we will look for `gql` calls\n  let gqlIdentifierName = defaultGqlIdentifierName\n\n  const pluckStringFromFile = ({ start, end }) => {\n    return freeText(code\n      // Slice quotes\n      .slice(start + 1, end - 1)\n      // Erase string interpolations as we gonna export everything as a single\n      // string anyways\n      .replace(/\\$\\{[^}]*\\}/g, '')\n    )\n  }\n\n  // Push all template literals leaded by graphql magic comment\n  // e.g. /* GraphQL */ `query myQuery {}` -> query myQuery {}\n  const pluckMagicTemplateLiteral = (node) => {\n    const leadingComments = node.leadingComments\n\n    if (!leadingComments) return\n    if (!leadingComments.length) return\n\n    const leadingComment = leadingComments[leadingComments.length - 1]\n    const leadingCommentValue = leadingComment.value.trim().toLowerCase()\n\n    if (leadingCommentValue != gqlMagicComment) return\n\n    const gqlTemplateLiteral = pluckStringFromFile(node)\n\n    if (gqlTemplateLiteral) {\n      gqlTemplateLiterals.push(gqlTemplateLiteral)\n    }\n  }\n\n  return {\n    CallExpression: {\n      enter(path) {\n        // Find the identifier name used from graphql-tag, commonJS\n        // e.g. import gql from 'graphql-tag' -> gql\n        if (\n          path.node.callee.name == 'require' &&\n          path.node.arguments[0].value == gqlPackName\n        ) {\n          if (!t.isVariableDeclarator(path.parent)) return\n          if (!t.isIdentifier(path.parent.id)) return\n\n          gqlIdentifierName = path.parent.id.name\n\n          return\n        }\n\n        const arg0 = path.node.arguments[0]\n\n        // Push strings template literals to gql calls\n        // e.g. gql(`query myQuery {}`) -> query myQuery {}\n        if (\n          t.isIdentifier(path.node.callee) &&\n          path.node.callee.name == gqlIdentifierName &&\n          t.isTemplateLiteral(arg0)\n        ) {\n          const gqlTemplateLiteral = pluckStringFromFile(arg0)\n\n          // If the entire template was made out of interpolations it should be an empty\n          // string by now and thus should be ignored\n          if (gqlTemplateLiteral) {\n            gqlTemplateLiterals.push(gqlTemplateLiteral)\n          }\n        }\n      },\n    },\n\n    ImportDeclaration: {\n      enter(path) {\n        // Find the identifier name used from graphql-tag, es6\n        // e.g. import gql from 'graphql-tag' -> gql\n        if (path.node.source.value != gqlPackName) return\n\n        const gqlImportSpecifier = path.node.specifiers.find((importSpecifier) => {\n          return t.isImportDefaultSpecifier(importSpecifier)\n        })\n\n        if (!gqlImportSpecifier) return\n\n        gqlIdentifierName = gqlImportSpecifier.local.name\n      },\n    },\n\n    ExpressionStatement: {\n      exit(path) {\n        // Push all template literals leaded by graphql magic comment\n        // e.g. /* GraphQL */ `query myQuery {}` -> query myQuery {}\n        if (!t.isTemplateLiteral(path.node.expression)) return\n\n        pluckMagicTemplateLiteral(path.node)\n      },\n    },\n\n    TemplateLiteral: {\n      exit(path) {\n        pluckMagicTemplateLiteral(path.node)\n      },\n    },\n\n    TaggedTemplateExpression: {\n      exit(path) {\n        // Push all template literals provided to the found identifier name\n        // e.g. gql `query myQuery {}` -> query myQuery {}\n        if (\n          !t.isIdentifier(path.node.tag) ||\n          path.node.tag.name != gqlIdentifierName\n        ) {\n          return\n        }\n\n        const gqlTemplateLiteral = pluckStringFromFile(path.node.quasi)\n\n        if (gqlTemplateLiteral) {\n          gqlTemplateLiterals.push(gqlTemplateLiteral)\n        }\n      },\n    },\n\n    exit() {\n      out.returnValue = gqlTemplateLiterals.join('\\n\\n')\n    },\n  }\n}\n","module.exports = require(\"@babel/types\");","// Will use the shortest indention as an axis\nexport const freeText = (text) => {\n  if (text instanceof Array) {\n    text = text.join('')\n  }\n\n  // This will allow inline text generation with external functions, same as ctrl+shift+c\n  // As long as we surround the inline text with ==>text<==\n  text = text.replace(\n    /( *)==>((?:.|\\n)*?)<==/g,\n    (match, baseIndent, content) =>\n  {\n    return content\n      .split('\\n')\n      .map(line => `${baseIndent}${line}`)\n      .join('\\n')\n  })\n\n  const lines = text.split('\\n')\n\n  const minIndent = lines.filter(line => line.trim()).reduce((minIndent, line) => {\n    const currIndent = line.match(/^ */)[0].length\n\n    return currIndent < minIndent ? currIndent : minIndent\n  }, Infinity)\n\n  return lines\n    .map(line => line.slice(minIndent))\n    .join('\\n')\n    .trim()\n    .replace(/\\n +\\n/g, '\\n\\n')\n}\n\n// foo_barBaz -> ['foo', 'bar', 'Baz']\nexport const splitWords = (str) => {\n  return str\n    .replace(/[A-Z]/, ' $&')\n    .split(/[^a-zA-Z0-9]+/)\n}\n\n// upper -> Upper\nexport const toUpperFirst = (str) => {\n  return str.substr(0, 1).toUpperCase() + str.substr(1).toLowerCase()\n}\n\n// foo-bar-baz -> fooBarBaz\nexport const toCamelCase = (str) => {\n  const words = splitWords(str)\n  const first = words.shift().toLowerCase()\n  const rest = words.map(toUpperFirst)\n\n  return [first, ...rest].join('')\n}\n"],"sourceRoot":""}